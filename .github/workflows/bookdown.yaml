on:
  push:
    branches:
      - main
      - master
  workflow_dispatch:

name: bookdown

jobs:
  build:
    runs-on: macOS-latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      RENV_PATHS_ROOT: ~/.local/share/renv
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Setup R
        uses: r-lib/actions/setup-r@v1

      - name: Setup Pandoc
        uses: r-lib/actions/setup-pandoc@v1
        with:
          pandoc-version: '2.11.2'

      - name: Cache Renv packages
        uses: actions/cache@v2
        with:
          path: ${{ env.RENV_PATHS_ROOT }}
          key: renv-${{ hashFiles('renv.lock') }}
          restore-keys: renv-

      - name: Install packages
        run: |
          install.packages("renv")
          renv::restore()
        shell: Rscript {0}

      - name: Build site
        id: built-book
        run: |
          res <- bookdown::render_book("index.Rmd", quiet = TRUE)
          cat(sprintf("::set-output name=dir::%s", dirname(res)))
        shell: Rscript {0}

      - name: setup rsconnect and create manifest
        run: |
          renv::install("rsconnect")
          book_dir <- "${{ steps.built-book.outputs.dir}}"
          rsconnect::writeManifest(book_dir)
        shell: Rscript {0}

      - name: Publish the book
        env:
          CONNECT_SERVER: https://beta.rstudioconnect.com/
          CONNECT_API_KEY: ${{ secrets.RSC_BETA_TOKEN }}
        run: |
          renv::install("rstudio/connectapi")
          library(connectapi)
          client <- connect()
          bundle <- bundle_dir("${{ steps.built-book.outputs.dir}}")
          content <- deploy(client, bundle, name = "demo-book")
          poll_task(content)
